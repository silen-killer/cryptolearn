<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>5. RSA on CryptoLearn</title>
    <link>https://victim1307.github.io/cryptolearn/patterns/rsa/</link>
    <description>Recent content in 5. RSA on CryptoLearn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://victim1307.github.io/cryptolearn/patterns/rsa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/rsa/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/rsa/introduction/</guid>
      <description>RSA is a widely-used public-key encryption system that is based on the mathematical properties of large prime numbers. It was one of the first practical public-key cryptosystems and is widely used for secure data transmission.
The RSA encryption process consists of two parts: key generation and encryption/decryption.
Key Generation:
Select two large prime numbers, p and q. Compute n = p*q. n is used as the modulus for both the public and private keys.</description>
    </item>
    
    <item>
      <title>Common Modulus Attack</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/rsa/common-mod/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/rsa/common-mod/</guid>
      <description>A common modulus attack on RSA is a type of cryptographic attack that takes advantage of the properties of RSA encryption when the same modulus is used for multiple encryptions.
In RSA, encryption is performed by raising the plaintext message to the power of the public exponent (e) and taking the remainder when divided by the modulus (n). Similarly, decryption is performed by raising the ciphertext to the power of the private exponent (d) and taking the remainder when divided by the modulus (n).</description>
    </item>
    
  </channel>
</rss>
