<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>4. Stream &amp; Block Ciphers on CryptoLearn</title>
    <link>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/</link>
    <description>Recent content in 4. Stream &amp; Block Ciphers on CryptoLearn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/introduction/</guid>
      <description>Stream ciphers and block ciphers are two common types of symmetric encryption algorithms.
A stream cipher encrypts plaintext one bit or byte at a time, while a block cipher encrypts plaintext in fixed-size blocks, typically 128 or 256 bits at a time.
Stream ciphers are used in real-time applications where data is transmitted continuously, such as in wireless communications or streaming audio and video. They are efficient in terms of computation and memory usage and can encrypt data quickly and securely.</description>
    </item>
    
    <item>
      <title>Single Byte XOR</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/single-byte-xor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/single-byte-xor/</guid>
      <description>Single-Byte XOR, also known as Single Character XOR, is a simple form of XOR encryption that encrypts each byte of the plaintext message using a single byte key. The encryption process is done by applying the XOR operation between the plaintext byte and the key byte.
The decryption process is the same as the encryption process, it&amp;rsquo;s just the reverse of the encryption process, the decryption key is the same key used for encryption.</description>
    </item>
    
    <item>
      <title>Repeated Key XOR</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/repeated-key-xor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/repeated-key-xor/</guid>
      <description>Repeated Key XOR is a type of encryption that uses the XOR operation to encrypt plaintext by repeatedly applying a secret key to it. In this method, the key is repeated as many times as necessary to match the length of the plaintext. The encryption process works by taking each plaintext byte and the corresponding byte of the key, and applying the XOR operation between them. The result is the ciphertext.</description>
    </item>
    
    <item>
      <title>Transposition ciphers</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/transposition-cipher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/steam_block_ciphers/transposition-cipher/</guid>
      <description>Transposition ciphers are a type of encryption technique that rearrange the positions of the letters in the plaintext to produce the ciphertext. The plaintext is rearranged according to a specific rule or method, such as a regular pattern or a secret key. The process of encryption is reversible, meaning that the original plaintext can be obtained by rearranging the ciphertext using the same rule or method.
There are several types of transposition ciphers, such as:</description>
    </item>
    
  </channel>
</rss>
